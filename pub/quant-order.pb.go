// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.27.1
// 	protoc        v3.14.0
// source: quant-order.proto

package pub

import (
	context "context"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type CreateGridOrderReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Uid int64 `protobuf:"varint,1,opt,name=uid,proto3" json:"uid,omitempty"`
	// 券商类型
	BrokerType int32 `protobuf:"varint,2,opt,name=broker_type,json=brokerType,proto3" json:"broker_type,omitempty"`
	// 量化类型 1网格交易
	QuantType int32 `protobuf:"varint,3,opt,name=quant_type,json=quantType,proto3" json:"quant_type,omitempty"`
	// 资产类型 1上证 2深证 3美股(包括道琼斯和纳斯达克) 4港股
	AssetType int32 `protobuf:"varint,4,opt,name=asset_type,json=assetType,proto3" json:"asset_type,omitempty"`
	// 资产代号
	AssetCode string `protobuf:"bytes,5,opt,name=asset_code,json=assetCode,proto3" json:"asset_code,omitempty"`
	// 投入资金量 全都*1000,转为整数
	TotalMoney int64 `protobuf:"varint,6,opt,name=total_money,json=totalMoney,proto3" json:"total_money,omitempty"`
	// 网格数量
	GridNum int64 `protobuf:"varint,7,opt,name=grid_num,json=gridNum,proto3" json:"grid_num,omitempty"`
	// 网格上限
	GridMax int64 `protobuf:"varint,8,opt,name=grid_max,json=gridMax,proto3" json:"grid_max,omitempty"`
	// 网格下限
	GridMin int64 `protobuf:"varint,9,opt,name=grid_min,json=gridMin,proto3" json:"grid_min,omitempty"`
}

func (x *CreateGridOrderReq) Reset() {
	*x = CreateGridOrderReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_quant_order_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateGridOrderReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateGridOrderReq) ProtoMessage() {}

func (x *CreateGridOrderReq) ProtoReflect() protoreflect.Message {
	mi := &file_quant_order_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateGridOrderReq.ProtoReflect.Descriptor instead.
func (*CreateGridOrderReq) Descriptor() ([]byte, []int) {
	return file_quant_order_proto_rawDescGZIP(), []int{0}
}

func (x *CreateGridOrderReq) GetUid() int64 {
	if x != nil {
		return x.Uid
	}
	return 0
}

func (x *CreateGridOrderReq) GetBrokerType() int32 {
	if x != nil {
		return x.BrokerType
	}
	return 0
}

func (x *CreateGridOrderReq) GetQuantType() int32 {
	if x != nil {
		return x.QuantType
	}
	return 0
}

func (x *CreateGridOrderReq) GetAssetType() int32 {
	if x != nil {
		return x.AssetType
	}
	return 0
}

func (x *CreateGridOrderReq) GetAssetCode() string {
	if x != nil {
		return x.AssetCode
	}
	return ""
}

func (x *CreateGridOrderReq) GetTotalMoney() int64 {
	if x != nil {
		return x.TotalMoney
	}
	return 0
}

func (x *CreateGridOrderReq) GetGridNum() int64 {
	if x != nil {
		return x.GridNum
	}
	return 0
}

func (x *CreateGridOrderReq) GetGridMax() int64 {
	if x != nil {
		return x.GridMax
	}
	return 0
}

func (x *CreateGridOrderReq) GetGridMin() int64 {
	if x != nil {
		return x.GridMin
	}
	return 0
}

type CreateGridOrderRes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 投入资金量
	TotalMoney int64 `protobuf:"varint,1,opt,name=total_money,json=totalMoney,proto3" json:"total_money,omitempty"`
	// 网格详情
	Grids []*GridData `protobuf:"bytes,2,rep,name=grids,proto3" json:"grids,omitempty"`
}

func (x *CreateGridOrderRes) Reset() {
	*x = CreateGridOrderRes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_quant_order_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateGridOrderRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateGridOrderRes) ProtoMessage() {}

func (x *CreateGridOrderRes) ProtoReflect() protoreflect.Message {
	mi := &file_quant_order_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateGridOrderRes.ProtoReflect.Descriptor instead.
func (*CreateGridOrderRes) Descriptor() ([]byte, []int) {
	return file_quant_order_proto_rawDescGZIP(), []int{1}
}

func (x *CreateGridOrderRes) GetTotalMoney() int64 {
	if x != nil {
		return x.TotalMoney
	}
	return 0
}

func (x *CreateGridOrderRes) GetGrids() []*GridData {
	if x != nil {
		return x.Grids
	}
	return nil
}

type GridData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 资产数
	AssetNum int64 `protobuf:"varint,1,opt,name=asset_num,json=assetNum,proto3" json:"asset_num,omitempty"`
	// 上线
	GridMax int64 `protobuf:"varint,2,opt,name=grid_max,json=gridMax,proto3" json:"grid_max,omitempty"`
	// 下线
	GridMin int64 `protobuf:"varint,3,opt,name=grid_min,json=gridMin,proto3" json:"grid_min,omitempty"`
}

func (x *GridData) Reset() {
	*x = GridData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_quant_order_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GridData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GridData) ProtoMessage() {}

func (x *GridData) ProtoReflect() protoreflect.Message {
	mi := &file_quant_order_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GridData.ProtoReflect.Descriptor instead.
func (*GridData) Descriptor() ([]byte, []int) {
	return file_quant_order_proto_rawDescGZIP(), []int{2}
}

func (x *GridData) GetAssetNum() int64 {
	if x != nil {
		return x.AssetNum
	}
	return 0
}

func (x *GridData) GetGridMax() int64 {
	if x != nil {
		return x.GridMax
	}
	return 0
}

func (x *GridData) GetGridMin() int64 {
	if x != nil {
		return x.GridMin
	}
	return 0
}

type AssetData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 资产类型 -1人名币 -2港币 -3美元 1上证 2深证 3美股(包括道琼斯和纳斯达克) 4港股
	AssetType int32  `protobuf:"varint,1,opt,name=asset_type,json=assetType,proto3" json:"asset_type,omitempty"`
	AssetCode string `protobuf:"bytes,2,opt,name=asset_code,json=assetCode,proto3" json:"asset_code,omitempty"`
	AssetNum  int64  `protobuf:"varint,3,opt,name=asset_num,json=assetNum,proto3" json:"asset_num,omitempty"`
}

func (x *AssetData) Reset() {
	*x = AssetData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_quant_order_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AssetData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AssetData) ProtoMessage() {}

func (x *AssetData) ProtoReflect() protoreflect.Message {
	mi := &file_quant_order_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AssetData.ProtoReflect.Descriptor instead.
func (*AssetData) Descriptor() ([]byte, []int) {
	return file_quant_order_proto_rawDescGZIP(), []int{3}
}

func (x *AssetData) GetAssetType() int32 {
	if x != nil {
		return x.AssetType
	}
	return 0
}

func (x *AssetData) GetAssetCode() string {
	if x != nil {
		return x.AssetCode
	}
	return ""
}

func (x *AssetData) GetAssetNum() int64 {
	if x != nil {
		return x.AssetNum
	}
	return 0
}

var File_quant_order_proto protoreflect.FileDescriptor

var file_quant_order_proto_rawDesc = []byte{
	0x0a, 0x11, 0x71, 0x75, 0x61, 0x6e, 0x74, 0x2d, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x12, 0x03, 0x70, 0x75, 0x62, 0x22, 0x96, 0x02, 0x0a, 0x12, 0x43, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x47, 0x72, 0x69, 0x64, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x52, 0x65, 0x71, 0x12,
	0x10, 0x0a, 0x03, 0x75, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x03, 0x75, 0x69,
	0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x62, 0x72, 0x6f, 0x6b, 0x65, 0x72, 0x5f, 0x74, 0x79, 0x70, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x62, 0x72, 0x6f, 0x6b, 0x65, 0x72, 0x54, 0x79,
	0x70, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x71, 0x75, 0x61, 0x6e, 0x74, 0x5f, 0x74, 0x79, 0x70, 0x65,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x71, 0x75, 0x61, 0x6e, 0x74, 0x54, 0x79, 0x70,
	0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x61, 0x73, 0x73, 0x65, 0x74, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x61, 0x73, 0x73, 0x65, 0x74, 0x54, 0x79, 0x70, 0x65,
	0x12, 0x1d, 0x0a, 0x0a, 0x61, 0x73, 0x73, 0x65, 0x74, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x61, 0x73, 0x73, 0x65, 0x74, 0x43, 0x6f, 0x64, 0x65, 0x12,
	0x1f, 0x0a, 0x0b, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x5f, 0x6d, 0x6f, 0x6e, 0x65, 0x79, 0x18, 0x06,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x4d, 0x6f, 0x6e, 0x65, 0x79,
	0x12, 0x19, 0x0a, 0x08, 0x67, 0x72, 0x69, 0x64, 0x5f, 0x6e, 0x75, 0x6d, 0x18, 0x07, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x07, 0x67, 0x72, 0x69, 0x64, 0x4e, 0x75, 0x6d, 0x12, 0x19, 0x0a, 0x08, 0x67,
	0x72, 0x69, 0x64, 0x5f, 0x6d, 0x61, 0x78, 0x18, 0x08, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x67,
	0x72, 0x69, 0x64, 0x4d, 0x61, 0x78, 0x12, 0x19, 0x0a, 0x08, 0x67, 0x72, 0x69, 0x64, 0x5f, 0x6d,
	0x69, 0x6e, 0x18, 0x09, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x67, 0x72, 0x69, 0x64, 0x4d, 0x69,
	0x6e, 0x22, 0x5a, 0x0a, 0x12, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x47, 0x72, 0x69, 0x64, 0x4f,
	0x72, 0x64, 0x65, 0x72, 0x52, 0x65, 0x73, 0x12, 0x1f, 0x0a, 0x0b, 0x74, 0x6f, 0x74, 0x61, 0x6c,
	0x5f, 0x6d, 0x6f, 0x6e, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x74, 0x6f,
	0x74, 0x61, 0x6c, 0x4d, 0x6f, 0x6e, 0x65, 0x79, 0x12, 0x23, 0x0a, 0x05, 0x67, 0x72, 0x69, 0x64,
	0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x70, 0x75, 0x62, 0x2e, 0x47, 0x72,
	0x69, 0x64, 0x44, 0x61, 0x74, 0x61, 0x52, 0x05, 0x67, 0x72, 0x69, 0x64, 0x73, 0x22, 0x5d, 0x0a,
	0x08, 0x47, 0x72, 0x69, 0x64, 0x44, 0x61, 0x74, 0x61, 0x12, 0x1b, 0x0a, 0x09, 0x61, 0x73, 0x73,
	0x65, 0x74, 0x5f, 0x6e, 0x75, 0x6d, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x61, 0x73,
	0x73, 0x65, 0x74, 0x4e, 0x75, 0x6d, 0x12, 0x19, 0x0a, 0x08, 0x67, 0x72, 0x69, 0x64, 0x5f, 0x6d,
	0x61, 0x78, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x67, 0x72, 0x69, 0x64, 0x4d, 0x61,
	0x78, 0x12, 0x19, 0x0a, 0x08, 0x67, 0x72, 0x69, 0x64, 0x5f, 0x6d, 0x69, 0x6e, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x07, 0x67, 0x72, 0x69, 0x64, 0x4d, 0x69, 0x6e, 0x22, 0x66, 0x0a, 0x09,
	0x41, 0x73, 0x73, 0x65, 0x74, 0x44, 0x61, 0x74, 0x61, 0x12, 0x1d, 0x0a, 0x0a, 0x61, 0x73, 0x73,
	0x65, 0x74, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x61,
	0x73, 0x73, 0x65, 0x74, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x61, 0x73, 0x73, 0x65,
	0x74, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x61, 0x73,
	0x73, 0x65, 0x74, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x61, 0x73, 0x73, 0x65, 0x74,
	0x5f, 0x6e, 0x75, 0x6d, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x61, 0x73, 0x73, 0x65,
	0x74, 0x4e, 0x75, 0x6d, 0x32, 0x4e, 0x0a, 0x05, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x12, 0x45, 0x0a,
	0x0f, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x47, 0x72, 0x69, 0x64, 0x4f, 0x72, 0x64, 0x65, 0x72,
	0x12, 0x17, 0x2e, 0x70, 0x75, 0x62, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x47, 0x72, 0x69,
	0x64, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x52, 0x65, 0x71, 0x1a, 0x17, 0x2e, 0x70, 0x75, 0x62, 0x2e,
	0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x47, 0x72, 0x69, 0x64, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x52,
	0x65, 0x73, 0x22, 0x00, 0x42, 0x2b, 0x5a, 0x29, 0x2f, 0x55, 0x73, 0x65, 0x72, 0x73, 0x2f, 0x77,
	0x65, 0x69, 0x77, 0x65, 0x6e, 0x63, 0x68, 0x6f, 0x6e, 0x67, 0x2f, 0x67, 0x69, 0x74, 0x68, 0x75,
	0x62, 0x2f, 0x71, 0x75, 0x61, 0x6e, 0x74, 0x2d, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x2f, 0x70, 0x75,
	0x62, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_quant_order_proto_rawDescOnce sync.Once
	file_quant_order_proto_rawDescData = file_quant_order_proto_rawDesc
)

func file_quant_order_proto_rawDescGZIP() []byte {
	file_quant_order_proto_rawDescOnce.Do(func() {
		file_quant_order_proto_rawDescData = protoimpl.X.CompressGZIP(file_quant_order_proto_rawDescData)
	})
	return file_quant_order_proto_rawDescData
}

var file_quant_order_proto_msgTypes = make([]protoimpl.MessageInfo, 4)
var file_quant_order_proto_goTypes = []interface{}{
	(*CreateGridOrderReq)(nil), // 0: pub.CreateGridOrderReq
	(*CreateGridOrderRes)(nil), // 1: pub.CreateGridOrderRes
	(*GridData)(nil),           // 2: pub.GridData
	(*AssetData)(nil),          // 3: pub.AssetData
}
var file_quant_order_proto_depIdxs = []int32{
	2, // 0: pub.CreateGridOrderRes.grids:type_name -> pub.GridData
	0, // 1: pub.Order.CreateGridOrder:input_type -> pub.CreateGridOrderReq
	1, // 2: pub.Order.CreateGridOrder:output_type -> pub.CreateGridOrderRes
	2, // [2:3] is the sub-list for method output_type
	1, // [1:2] is the sub-list for method input_type
	1, // [1:1] is the sub-list for extension type_name
	1, // [1:1] is the sub-list for extension extendee
	0, // [0:1] is the sub-list for field type_name
}

func init() { file_quant_order_proto_init() }
func file_quant_order_proto_init() {
	if File_quant_order_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_quant_order_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateGridOrderReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_quant_order_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateGridOrderRes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_quant_order_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GridData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_quant_order_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AssetData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_quant_order_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   4,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_quant_order_proto_goTypes,
		DependencyIndexes: file_quant_order_proto_depIdxs,
		MessageInfos:      file_quant_order_proto_msgTypes,
	}.Build()
	File_quant_order_proto = out.File
	file_quant_order_proto_rawDesc = nil
	file_quant_order_proto_goTypes = nil
	file_quant_order_proto_depIdxs = nil
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// OrderClient is the client API for Order service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type OrderClient interface {
	// 创建订单
	CreateGridOrder(ctx context.Context, in *CreateGridOrderReq, opts ...grpc.CallOption) (*CreateGridOrderRes, error)
}

type orderClient struct {
	cc grpc.ClientConnInterface
}

func NewOrderClient(cc grpc.ClientConnInterface) OrderClient {
	return &orderClient{cc}
}

func (c *orderClient) CreateGridOrder(ctx context.Context, in *CreateGridOrderReq, opts ...grpc.CallOption) (*CreateGridOrderRes, error) {
	out := new(CreateGridOrderRes)
	err := c.cc.Invoke(ctx, "/pub.Order/CreateGridOrder", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// OrderServer is the server API for Order service.
type OrderServer interface {
	// 创建订单
	CreateGridOrder(context.Context, *CreateGridOrderReq) (*CreateGridOrderRes, error)
}

// UnimplementedOrderServer can be embedded to have forward compatible implementations.
type UnimplementedOrderServer struct {
}

func (*UnimplementedOrderServer) CreateGridOrder(context.Context, *CreateGridOrderReq) (*CreateGridOrderRes, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateGridOrder not implemented")
}

func RegisterOrderServer(s *grpc.Server, srv OrderServer) {
	s.RegisterService(&_Order_serviceDesc, srv)
}

func _Order_CreateGridOrder_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateGridOrderReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(OrderServer).CreateGridOrder(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pub.Order/CreateGridOrder",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(OrderServer).CreateGridOrder(ctx, req.(*CreateGridOrderReq))
	}
	return interceptor(ctx, in, info, handler)
}

var _Order_serviceDesc = grpc.ServiceDesc{
	ServiceName: "pub.Order",
	HandlerType: (*OrderServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "CreateGridOrder",
			Handler:    _Order_CreateGridOrder_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "quant-order.proto",
}
